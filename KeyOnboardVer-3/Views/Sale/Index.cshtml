
@{
    ViewBag.Title = "Product Sold";
}

<h2>Product Sold</h2>
<button class="btn btn-info">Add Customer</button>
<hr />

<table class="table table-striped table-hover table-bordered">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Product</th>
            <th>Store</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody data-bind="foreach: Sales">
        <tr>
            <td data-bind="text: Customer"></td>
            <td data-bind="text: Product"></td>
            <td data-bind="text: Store"></td>
            <td>
                <button class="btn btn-success" data-bind="click:$root.showEditModal">
                    Edit
                </button>
            </td>
        </tr>

    </tbody>
</table>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog" data-bind="with : SelectedSale">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Modal Header</h4>
            </div>
            <form>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Select Customer</label>
                        <select class="form-control" data-bind="options : $parent.Customers, optionsText : 'Name', value : $parent.SelectedCustomer"></select>
                    </div>
                    <div class="form-group">
                        <label>Select Product</label>
                        <select class="form-control" data-bind="options : $parent.Products, optionsText : 'Name', value : $parent.SelectedProduct"></select>
                    </div>
                    <div class="form-group">
                        <label>Select Store</label>
                        <select class="form-control" data-bind="options : $parent.Stores, optionsText : 'Name', value : $parent.SelectedStore"></select>
                    </div>
                    <div class="form-group">
                        <label>Date Sold</label>
                        <input type="text" class="form-control" data-bind="value : moment(DateSold()).format('MM/DD/YYYY'), event:{ change: $parent.doSomething}"/>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" data-bind="click : $parent.SaveSale">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </form>

        </div>

    </div>
</div>

<script>
    
    function ProductSold(data) {
        var self = this;
        self.Id = data.Id;
        self.Customer = ko.observable(data.Customer);
        self.CustomerId = ko.observable(data.CustomerId);
        self.Store = ko.observable(data.Store);
        self.StoreId = ko.observable(data.StoreId);
        self.Product = ko.observable(data.Product);
        self.ProductId = ko.observable(data.ProductId);
        self.DateSold = ko.observable(data.DateSold);
    }

    function ViewModel() {
        var self = this;
        self.Sales = ko.observableArray();
        self.SelectedSale = ko.observable();
        self.Customers = ko.observableArray();
        self.SelectedCustomer = ko.observable();
        self.Products = ko.observableArray();
        self.SelectedProduct = ko.observable();
        self.Stores = ko.observableArray();
        self.SelectedStore = ko.observable();
        self.showEditModal = function (data) {
            self.SelectedSale(data);
            var cus = ko.utils.arrayFirst(self.Customers(), function (item) {
                return item.Id == data.CustomerId();
            });
            self.SelectedCustomer(cus);
            var pro = ko.utils.arrayFirst(self.Products(), function (item) {
                return item.Id == data.ProductId();
            });
            self.SelectedProduct(pro);
            var store = ko.utils.arrayFirst(self.Stores(), function (item) {
                return item.Id == data.StoreId();
            });
            debugger;
            self.SelectedStore(store);
            $('#myModal').modal('show');
        }
        self.doSomething = function (data, event) {
            debugger;
        }
        self.SaveSale = function (data) {
            var saleId = data.Id;
            var customerId = self.SelectedCustomer().Id;
            debugger;
            //var productId = self.SelectedProduct().Id;
            //now use ajax to save sale,
        }
        getSales();
        getCustomers();
        getProducts();
        getStores();
        function getSales() {
            $.ajax({
                url: '/Sale/GetAllSales',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    response.forEach(function (item) {
                        self.Sales.push(new ProductSold(item));
                    });
                    
                }
            });
        }
        function getCustomers() {
            $.ajax({
                url: '/Customer/GetAllCustomer',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    self.Customers(response);
                }
            });
        }
        function getProducts() {
            $.ajax({
                url: '/Product/GetAllProducts',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    self.Products(response);
                }
            });
        }
        function getStores() {
            $.ajax({
                url: '/Store/GetAllStores',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    self.Stores(response);
                }
            });
        }
    }
    $(document).ready(function () {
        ko.applyBindings(new ViewModel());
    });
</script>